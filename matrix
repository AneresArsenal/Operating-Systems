#!/bin/bash


# while read num
# do
#     echo "In loop"
#     echo "num: $num"
#     sum=`expr $sum + $num`
#     echo "sum: $sum"
#     echo -e "End of loop\n"

# done < "$1"

sum=0
rows=0
cols=0

function dims() {

if [ "$#" -eq 1 ]
then
    if [ -e $1 ]
    then
        while IFS= read -rN1 char
        do
            if [[ "$char" == $'\n' ]]; 
                then ((++rows))
            fi
            if [[ "$char" == $'\t' ]]; 
                then ((++cols))
            fi
        done < "$1"
    else
        echo "File named by argument 1 is not readable" 1>&2
        exit 1
    fi

elif [ "$#" -eq 0 ]
then
    while IFS= read -rN1 char
    do
        if [[ "$char" == $'\n' ]]; 
            then ((++rows))
        fi
        if [[ "$char" == $'\t' ]]; 
            then ((++cols))
        fi
    done < /dev/stdin
else
    echo "Argument count is greater than 1" 1>&2
    exit 1

fi

cols=$(( $cols / $rows))
((cols++))
echo -e "$rows $cols"
}

function transpose() {

inputFile="transposeFile"
column="transposeColFile"
tempFile="transposeTempFile"
finalFile="transposeFinalFile"
flag=0

if [ "$#" -eq 1 ]
then
    if [ -e $1 ]
    then
        while IFS= read -rN1 char
        do
        if [[ "$char" == $'\n' ]]; 
            then ((++rows))
        fi
        if [[ "$char" == $'\t' ]]; 
            then ((++cols))
        fi
        done < $1

        cols=$(( $cols / $rows))
        ((cols++))
        ((cols++))

        # echo -e "Pre-transpose: number of rows $rows \n"
        # echo -e "Pre-transpose: number of cols $cols \n"
        
        ((++rows))
        ((++rows))
        flag=0
        # j=0
        
        while read myLine
        do
        echo -e "$myLine" > $inputFile
        if [ $flag -ne 1 ]
        then
            flag=1
            # ((++j))
            cut -f 1 $inputFile > $column
            i=2
            while [ $i -ne $cols ]
            do
                cut -f $i $inputFile >> $column
                ((++i))
            done
            cat $column > $tempFile
        else
            # ((++j))
            cut -f 1 $inputFile > $column
            i=2
            while [ $i -ne $cols ]
            do
                cut -f $i $inputFile >> $column
                ((++i))
            done
            
            # echo -e "column file:\n"
            # cat $column
            # echo -e "temp file:\n"
            # cat $tempFile

            paste $tempFile $column > $finalFile
            cat $finalFile > $tempFile
        fi
        done < $1     

        # echo -e "post-transpose: number of rows $i"
        # echo -e "post-transpose: number of cols $j"   
        # done < /dev/stdin
        cat $finalFile
    else
        echo "File named by argument 1 is not readable" 1>&2
        exit 1
    fi

elif [ "$#" -eq 0 ]
then
    while IFS= read -rN1 char
    do
            if [[ "$char" == $'\n' ]]; 
                then ((++rows))
            fi
            if [[ "$char" == $'\t' ]]; 
                then ((++cols))
            fi
    done < $m1

    cols=$(( $cols / $rows))
    ((cols++))

    # echo -e "Pre-transpose: number of rows $rows \n"
    # echo -e "Pre-transpose: number of cols $cols \n"
    
    ((++rows))
    ((++rows))
    flag=0
    j=0
        
    while read myLine
    do
        echo -e "$myLine" > $inputFile
        if [ $flag -ne 1 ]
        then
            flag=1
            ((++j))
            cut -f 1 $inputFile > $column
            i=2
            while [ $i -ne $cols ]
            do
                cut -f $i $inputFile >> $column
                ((++i))
            done
            cat $column > $tempFile
        else
            ((++j))
            cut -f 1 $inputFile > $column
            i=2
            while [ $i -ne $cols ]
            do
                cut -f $i $inputFile >> $column
                ((++i))
            done
            
            # echo -e "column file:\n"
            # cat $column
            # echo -e "temp file:\n"
            # cat $tempFile

            paste $tempFile $column > $finalFile
            cat $finalFile > $tempFile
        fi
    done < /dev/stdin
    # done < $m1     
    # echo -e "post-transpose: number of rows $i"
    # echo -e "post-transpose: number of cols $j"   

    cat $finalFile

else
    echo "Argument count is greater than 1" 1>&2
    exit 1
fi

}

function mean(){

inputFile="meanFile"
line="meanLine"
flag=0
sum=0
rows=0
cols=0
mean=0
meanArr="meanArray"
tempRow="meanTempRow"
transposeinputFile="meantransposeFile"
transposecolumn="transposeColFile"
transposetempFile="transposeTempFile"
transposefinalFile="transposeFinalFile"
m1="meanM1"
m2="meanM2"

echo "-28	91	29	-5	12	83
-94	-16	41	-28	6	86
-44	83	-9	64	92	-70
41	22	66	29	55	49
6	52	4	17	-29	52
-8	-33	96	-73	-76	92
-32	94	45	4	43	-97
-57	36	86	90	35	75
46	8	4	-83	-94	-52
0	-6	-90	48	70	11
-33	-41	-76	68	30	-19
70	96	-85	-1	-9	-62
58	63	-4	22	-69	-25
-75	-65	-78	76	39	10
-99	-69	63	53	35	67
73	51	55	-26	-14	9
-90	-19	-19	-63	-96	23
-62	89	93	98	48	-21
-56	-86	24	45	-79	-65
-79	-60	87	-74	44	20
-38	50	-50	-38	-36	30
-69	-66	-23	42	55	-5
-62	98	47	-86	23	-85
-2	-55	-79	-41	-12	-31
-84	-10	46	16	-56	-26
70	-16	-17	99	24	-41
80	47	-59	-55	80	96
-54	43	24	-82	1	-46
25	-1	92	16	44	-21
62	58	79	-97	-21	-62
-46	-23	-68	59	-72	-6
-78	59	11	52	-96	-77
5	77	64	-29	-98	69
-68	69	74	32	-71	91
38	-75	25	-61	-29	73
40	25	29	93	93	-27
-1	-16	-14	48	99	-36
81	6	35	-90	4	-57
80	84	63	-10	80	-99
96	-5	-81	11	37	-46" > $m1

echo "-10	16	13	4	2	-4" > $m2

if [ "$#" -eq 1 ]
then
    if [ -e $1 ]
    then

        while IFS= read -rN1 char
        do
            if [[ "$char" == $'\n' ]]; 
                then ((++rows))
            fi
            if [[ "$char" == $'\t' ]]; 
                then ((++cols))
            fi
        done < $m1

        cols=$(( $cols / $rows))
        ((cols++))

        # echo -e "Pre-transpose: number of rows $rows \n"
        # echo -e "Pre-transpose: number of cols $cols \n"

        flag=0
        j=0
            
        while read myLine
        do
            echo -e "$myLine" > $transposeinputFile
            if [ $flag -ne 1 ]
            then
                flag=1
                ((++j))
                cut -f 1 $transposeinputFile > $transposecolumn
                i=2
                while [ $i -le $cols ]
                do
                    cut -f $i $transposeinputFile >> $transposecolumn
                    ((++i))
                done
                cat $transposecolumn > $transposetempFile
            else
                ((++j))
                cut -f 1 $transposeinputFile > $transposecolumn
                i=2
                while [ $i -le $cols ]
                do
                    cut -f $i $transposeinputFile >> $transposecolumn
                    ((++i))
                done
                
                # echo -e "column file:\n"
                # cat $column
                # echo -e "temp file:\n"
                # cat $tempFile

                paste $transposetempFile $transposecolumn > $transposefinalFile
                cat $transposefinalFile > $transposetempFile
            fi
        done < $m1 

        # echo -e "Post-transpose: number of rows $i \n"
        # echo -e "Post-transpose: number of cols $j \n"
        # cat $m1
        # cat $transposefinalFile 
        ((--i))

        flag=0
            
        while IFS=$'\t' read -r -a currentLine
        do
            # echo -e "$currentLine"
            for i in "${currentLine[@]}"
            do 
                # echo "num: $i"
                sum=`expr $sum + $i`
                # echo "sum: $sum"
            done
            echo "sum: $sum"    
            mean=$(( $sum / $rows ))
            round=$(( $sum % $rows ))
            round=$(( $round + $round ))

            # positive mean
            if [ $round -gt 0 ]
            then
                if [ $round -ge $rows ]
                then
                    round=1
                else
                    round=0
                fi
            #negative mean
            else
                if [ $round -le $rows ]
                then
                    round=-1
                else
                    round=0
                fi
            fi
            mean=$(( $mean + $round ))
            # echo "mean: $mean"
            if [ $flag -ne 1 ]
            then
                flag=1
                echo "$mean" > $meanArr
            else
                echo "$mean" >> $meanArr
            fi
            mean=0
            sum=0
        done < $transposefinalFile
        

        cat $meanArr | tr '\n' '\t' > "$tempRow"
        echo >> $tempRow
        cat $tempRow

        if [ $? -eq 0 ]
        then
            rm -f $meanArr
            rm -f $tempRow
            rm -f $inputFile
            rm -f $line
            rm -f $meanArr
            rm -f $tempRow
            rm -f $transposeinputFile
            rm -f $transposecolumn
            rm -f $transposetempFile
            rm -f $transposefinalFile
        fi

    else
        echo "File named by argument 1 is not readable" 1>&2
        exit 1
    fi


else
echo "Argument count is greater than 1" 1>&2
exit 1
fi

}

$@

# reference materials:
# https://stackoverflow.com/questions/10929453/read-a-file-line-by-line-assigning-the-value-to-a-variable
# https://stackoverflow.com/questions/18568706/check-number-of-arguments-passed-to-a-bash-script
# https://stackoverflow.com/questions/6980090/how-to-read-from-a-file-or-stdin-in-bash
# https://stackoverflow.com/questions/638975/how-do-i-tell-if-a-regular-file-does-not-exist-in-bash